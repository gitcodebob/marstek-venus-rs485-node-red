# This file contains the core entities of the House Battery Control.
# It should be included in the main configuration.yaml file as a `package` via `!include_dir_named` https://www.home-assistant.io/docs/configuration/packages/.
# Replace this file when updating `House Battery Control`.

###########################################################################################################
# BOOLEAN
###########################################################################################################
input_boolean:
  # Analytics
  house_battery_control_has_node_red:
    name: Node Red Ready

  house_battery_control_is_charging:
    name: Charging

  # Supported strategies
  strategy_accu_grid_charge_or_wait_charge_enabled:
    name: Charge batteries during Grid charge or wait strategy

###########################################################################################################
# DATETIME
###########################################################################################################
input_datetime:
  strategy_accu_grid_charge_or_wait_start_at:
    name: Strategy grid charge or wait, Start at
    has_date: false
    has_time: true
    icon: mdi:clock-end

  strategy_accu_grid_charge_or_wait_stop_at:
    name: Strategy grid charge or wait, Stop at
    has_date: false
    has_time: true
    icon: mdi:clock-end

###########################################################################################################
# INPUT_NUMBER
###########################################################################################################
input_number:
  # Core configuration
  house_battery_count:
    # Number of Marstek batteries
    name: "Number of batteries"
    min: 1
    max: 3
    step: 1
    unit_of_measurement: ""
    mode: slider
    icon: mdi:battery-plus-variant

  # Which battery has priority (this battery will go first in the charging order)
  house_battery_control_prioritize_battery:
    name: "Prioritize battery"
    min: 1
    max: 3
    step: 1
    unit_of_measurement: ""
    mode: box
    icon: mdi:battery-arrow-up

  # Strategy | self consumption (NoM)
  house_target_grid_consumption_in_w:
    # Target grid consumption control
    name: "House Target Grid Consumption"
    min: -15000
    max: 15000
    step: 1
    unit_of_measurement: "W"
    mode: box
    icon: mdi:chart-timeline-variant # line chart

  house_battery_control_error_signal:
    # PID control error
    name: "House Battery Control Error Signal"
    min: -15000
    max: 15000
    step: 0.1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_pid_output:
    # PID output = manipulated variable = battery power setpoint
    # Batteries are commanded to deliver or charge by this amount
    name: "House Battery Control PID Output"
    min: -15000
    max: 15000
    step: 0.1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_hysteresis_in_w:
    # PID optimization
    # Prevents excessive switching between (dis)charge mode around the zero point.
    # Let the battery switch from charge/discharge only when the demand is larger than the hysteresis.
    name: "House Battery Control Hysteresis in W"
    min: 0 # no hysteresis. The control system switches instantly from charge to discharge and back again when crossing the 0 point.
    max: 200
    step: 1
    unit_of_measurement: "W"
    mode: slider # 'box' of 'slider'
    icon: mdi:numeric

  house_battery_control_idle_time:
    # Distribution optimization
    # Prevents excessive ON/OFF switching of the inverter relay.
    # The inverter switches OFF after being idle for the configured duration
    name: "House Battery Control Stop after Idle for Minutes"
    min: 0 # no idling, battery inverter instantly latches OFF when 0 Watt is requested.
    max: 60 # STOPS after 1 hour.
    step: 1
    unit_of_measurement: "min"
    mode: box # 'box' of 'slider'
    icon: mdi:timer-lock

  house_battery_control_kp:
    # PID proportional amplification Kp
    name: "House Battery Control Proportional (Kp)"
    min: 0 # no proportional control
    max: 2 # ecsessive proportional amplification
    step: 0.05
    unit_of_measurement: ""
    mode: box # 'box' of 'slider'
    icon: mdi:amplifier

  house_battery_control_ki:
    # PID integral amplification Ki
    # removes residual offset / steady state errors
    name: "House Battery Control Integral (Ki)"
    min: 0 # no integrating control
    max: 5
    step: 0.05
    unit_of_measurement: ""
    mode: box # 'box' of 'slider'
    icon: mdi:amplifier

  house_battery_control_kd:
    # PID differential amplification Kd
    # help anticipate next value based on rate of change
    name: "House Battery Control Differential (Kd)"
    min: 0 # no integrating control
    max: 5
    step: 0.05
    unit_of_measurement: ""
    mode: box # 'box' of 'slider'
    icon: mdi:amplifier

  house_battery_control_pid_output_dampening:
    # PID control output dampening
    name: "HBC Output Dampening"
    min: 0 # the newly calculated PID value will be used for 100% as the final output value.
    max: 90 # only 10% of the new PID value is used in the final PID value. 100% would fixate the output.
    step: 10
    unit_of_measurement: "%"
    mode: box
    icon: mdi:car-brake-parking # shimmering line chart

  house_battery_control_error_signal_dampening:
    # PID control input dampening
    name: "HBC Error Dampening"
    min: 0
    max: 90
    step: 10
    unit_of_measurement: "%"
    mode: box
    icon: mdi:car-brake-parking # shimmering line chart

  ##### PID Analytics #####
  house_battery_control_p_term:
    # output only, calculated p_term
    name: "House Battery Control P-term"
    min: -10000 # arbitrary
    max: 10000 # arbitrary
    step: 1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_i_term:
    # output only, calculated i_term
    name: "House Battery Control I-term"
    min: -10000 # arbitrary
    max: 10000 # arbitrary
    step: 1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_d_term:
    # output only, calculated p_term
    name: "House Battery Control D-term"
    min: -10000 # arbitrary
    max: 10000 # arbitrary
    step: 1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_error_deviation:
    # output only, the deviation in the error signal
    name: "HBC Error Deviation"
    min: -10000 # arbitrary
    max: 10000 # arbitrary
    step: 1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_pid_output_deviation:
    # output only, deviation in the pid output
    name: "HBC PID Output Deviation"
    min: -10000 # arbitrary
    max: 10000 # arbitrary
    step: 1
    unit_of_measurement: "W"
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  house_battery_control_debug:
    # output only
    name: "HBC debug"
    min: -10000 # arbitrary
    max: 10000 # arbitrary
    step: 1
    unit_of_measurement: ""
    mode: box
    initial: 0
    icon: mdi:chart-timeline-variant-shimmer # shimmering line chart

  # Strategy | charge or wait
  strategy_accu_grid_charge_or_wait_total_target_capacity:
    name: House Battery Target (kWh) in grid charge from the grid
    min: 1.8 # +/- 11%
    max: 15.36 # pas dit aan naar totale capaciteit van je 3 accu's
    step: 0.1
    unit_of_measurement: "kWh"
    icon: mdi:battery-charging

###########################################################################################################
# INPUT_SELECT
###########################################################################################################
input_select:
  marstek_master_battery_mode:
    name: Master Battery Mode
    options:
      - Manual control # Forces Marstek into Manual Work mode. Follows the schedule configured in the Marstek App
      - Marstek control # Lets Marstek's own control algorithm take over. Remember to set the work mode: manual, anti-feed or ai.
      - Full control # Full control over the battery, no Marstek control
    icon: mdi:battery-heart

  house_battery_strategy:
    name: House Battery Strategy
    options:
      - Full stop # Stop (dis)charging and disengage grid relay
      - Self-consumption # Use your own solar production. Don't buy or sell. Target grid consumption = 0, e.g. "Nul op de meter (NoM)" in Dutch.
      - Time-of-Use # Buy when prices are low and store solar, use when power is expensive. Aka Time-of-Use optimization.
      - Trading # Ignore your own usage, optimize for making money via trading. Buy when prices are low, fully discharge when prices are high.
      - Grid-Charge-Or-Wait #charge from the grid during (very) low or negative price hours to cover upcoming expensive hours when PV is insufficient
      - Custom 1 # Your own strategy here
    icon: mdi:home-battery

  # How often is battery priority cycled automatically?
  house_battery_control_priority_change_interval:
    name: "Auto Cycle"
    options:
      - Weekly
      - Daily
      - Never
    icon: mdi:battery-clock

  # Self consumption strategy | PID presets
  house_battery_control_pid_presets:
    name: "PID presets"
    options:
      - Custom
      - Very safe
      - Safe
      - Regular
    icon: mdi:list-box

  strategy_accu_grid_charge_or_wait_switch_to_strategy_when_finished:
    name: Strategy when finished grid charge or wait
    options:
      - Full stop # Stop (dis)charging and disengage grid relay
      - Self-consumption # Use your own solar production. Don't buy or sell. Target grid consumption = 0, e.g. "Nul op de meter (NoM)" in Dutch.
      - Time-of-Use # Buy when prices are low and store solar, use when power is expensive. Aka Time-of-Use optimization.
      - Trading # Ignore your own usage, optimize for making money via trading. Buy when prices are low, fully discharge when prices are high.
      - Custom 1 # Your own strategy here
    icon: mdi:home-battery

###########################################################################################################
# TEMPLATE SENSORS
###########################################################################################################
template:
  # Sensor that calculates how long the batteries can still discharge, keeping in mind that batteries should not go below 11%
  - sensor:
      # Total power delivered by all batteries
      - name: "House Total Battery Power"
        unique_id: "house_total_battery_power_in_w"
        state_class: measurement
        device_class: "power"
        unit_of_measurement: "W"
        state: >
          {# Configuration #}
          {% set bat_entities = [
            'sensor.marstek_m1_battery_power', 
            'sensor.marstek_m2_battery_power',
            'sensor.marstek_m3_battery_power' 
          ] %}

          {# Filter entities on valid values and retrieve power #}
          {% set available_powers = expand(bat_entities) 
            | selectattr('state', 'is_number') 
            | map(attribute='state') 
            | map('float', 0) 
            | list 
          %}

          {# Check if any battery power sensor is available #}
          {% if available_powers | length > 0 %}
            {# Sum all available power readings #}
            {% set total_power = available_powers | sum %}
            {# Marstek uses negative power when delivering power, positive when charging. This is inverse from what HA expects.#}
            {{ (total_power * -1) | round(2) }}
          {% else %}
            unavailable
          {% endif %}

      # Energy remaining
      - name: "House Total Battery Energy remaining"
        unique_id: "house_total_battery_energy_remaining"
        device_class: "energy"
        unit_of_measurement: "kWh"
        state: >
          {# Configuration #}
          {% set BATTERY_CAPACITY_KWH = 5.12 %}
          {% set MIN_DISCHARGE_SOC = 12.0 | float %}
          {% set bat_entities = [
            'sensor.marstek_m1_battery_state_of_charge', 
            'sensor.marstek_m2_battery_state_of_charge',
            'sensor.marstek_m3_battery_state_of_charge' 
          ] %}

          {# Filter entities on valid values and retrieve SoC #}
          {% set available_socs = expand(bat_entities) 
            | selectattr('state', 'is_number') 
            | map(attribute='state') 
            | map('float', 0) 
            | list 
          %}

          {# Calculate total battery energy #}
          {% if available_socs | length > 0 %}
            {% set total_soc = available_socs | sum %}
            {% set num_batteries = available_socs | length %}
            
            {# Total usable SoC in % #}
            {% set total_usable_soc = total_soc - (num_batteries * MIN_DISCHARGE_SOC) %}
            
            {# Total usable energy in kWh #}
            {% set total_usable_energy = (total_usable_soc / 100) * (num_batteries * BATTERY_CAPACITY_KWH) %}
            
            {{ total_usable_energy | round(1) }}
          {% else %}
            unavailable
          {% endif %}

      # Time Remaining
      - name: "Battery time remaining"
        unique_id: house_battery_time_remaining
        state: >
          {% set power = max(0, states('sensor.house_total_battery_power_in_w') | float(0)) %}
          {% set capacity_kwh = states('sensor.house_total_battery_energy_remaining') | float(0) %}
          {% if power > 0 and capacity_kwh > 0 %}
            {% set time_hrs = (capacity_kwh * 1000) / power %}
            {% set hrs = time_hrs | int %}
            {% set minutes = ((time_hrs - hrs) * 60) | round(0) | int %}
            {{ '{:02}:{:02}'.format(hrs, minutes) }} hours
          {% else %}
            Idle/Charging
          {% endif %}
